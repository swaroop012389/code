xp_BackToQuoteSummary = //link[text()='Back To Quote Summary']
#not sure if this is permanent
xp_GoWebflow = //link[text()='Go Webflow']

#model versions
xp_GuyCarpModelType = //link[contains(text(),'GUY_CARP')]

xp_RMSIMAMModelType = //link[contains(text(),'RMS_IMAM')]
xp_RMSIMAMRequestModel = //button[class()='btn modelRequestButton'][0]

xp_RMSRAWModelType = //link[contains(text(),'RMS_RAW')]
xp_RMSRAWRequestModel = //button[class()='btn modelRequestButton'][1]

#risk details
xp_Microzone = //div[text()='Microzone:']//following-sibling::div
xp_TIV = //div[text()='TIV:']//following-sibling::div//span
xp_Wind = //div[text()='Wind']//following-sibling::div//span
xp_Limit = //div[text()='Limit:']//following-sibling::div//span
xp_Structure = //div[text()='Structure:']//following-sibling::div//span
xp_Future = //div[text()='Future:']//following-sibling::div//span
xp_LCOR = //div[text()='LCOR:']//following-sibling::div//span
xp_PML = //div[text()='PML:']//following-sibling::div//span

#pricing
#wind
xp_WindPremium = //th[text()='Wind']//td[@class()='basePremium']
xp_WindRate = //input[@id='pricingInputWind.rate']
xp_WindOverrideFactor = //input[@id='pricingInputWind.overrideFactor']
xp_WindELR = //input[@id='pricingInputWind.elr']
xp_WindAnnual = //input[@id='pricingInputWind.annual']
xp_WindPerModeling = //th[text()='Wind']//td[4]

#aop
xp_AOPPremium = //th[text()='AOP']//td[@class()='basePremium']
xp_AOPRate = //input[@id='pricingInputAllRisk.rate']
xp_AOPOverrideFactor= //input[@id='pricingInputAllRisk.overrideFactor']
#xp_AOPELR = //td[@id='pricingInputWind.elr']
xp_AOPAnnual= //input[@id='pricingInputAllRisk.premium']
xp_AOPPerModeling = //td[text()='AOP']//td[4]

#eq
xp_EQPremium = //th[text()='Earthquake']//td[@class()='basePremium']
xp_EQRate = //input[@id='pricingInputEarthquake.rate']
xp_EQOverrideFactor= //input[@id='pricingInputEarthquake.overrideFactor']
#xp_EQELR = //td[@id='pricingInputEarthquake.elr']
xp_EQAnnual = //input[@id='pricingInputEarthquake.premium']
xp_EQPerModeling = //td[text()='Earthquake']//td[4]

#sinkhole
xp_SinkholePremium = //th[text()='Sinkhole']//td[@class()='basePremium']
xp_SinkholeRate = //input[@id='pricingInputSinkhole.rate']
xp_SinkholeOverrideFactor= //input[@id='pricingInputSinkhole.overrideFactor']
#xp_SinkholeELR = //td[@id='pricingInputWind.elr']
xp_SinkholeAnnual = //input[@id='pricingInputSinkhole.premium']
xp_SinkholePerModeling = //td[text()='Sinkhole']//td[4]

#eqb
xp_EQBPremium = //th[text()='EQB']//td[@class()='basePremium']
xp_EQBRate = //input[@id='pricingInputEQB.rate']
xp_EQBOverrideFactor= //input[@id='pricingInputEQB.overrideFactor']
#xp_EQBELR = //td[@id='pricingInputEQB.elr']
xp_EQBAnnual= //input[@id='pricingInputEQB.premium']
xp_EQBPerModeling = //td[text()='EQB']//td[4]

#eqsl
xp_EQSLPremium = //th[text()='EQSL']//td[@class()='basePremium']
xp_EQSLRate = //input[@id='pricingInputEQSL.rate']
xp_EQSLOverrideFactor= //input[@id='pricingInputEQSL.overrideFactor']
#xp_EQSLELR = //td[@id='pricingInputEQSL.elr']
xp_EQSLAnnual = //input[@id='pricingInputEQSL.premium']
xp_EQSLPerModeling = //td[text()='EQSL']//td[4]

#tria
xp_TRIAPremium = //th[text()='TRIA']//td[@class()='basePremium']
xp_TRIARate = //input[@id='pricingInputTRIA.rate']
xp_TRIAOverrideFactor= //input[@id='pricingInputTRIA.overrideFactor']
#xp_TRIAELR = //td[@id='pricingInputTRIA.elr']
xp_TRIAAnnual = //input[@id='pricingInputTRIA.premium']
xp_TRIAPerModeling = //td[text()='TRIA']//td[4]

#coverage package a and b
#xp_TRIAPremium = //th[text()='TRIA']//td[@class()='basePremium']
#xp_TRIARate = //input[@id='pricingInputTRIA.rate']
#xp_TRIAOverrideFactor= //input[@id='pricingInputTRIA.overrideFactor']
#xp_TRIAELR = //td[@id='pricingInputTRIA.elr']
#xp_TRIAAnnual = //input[@id='pricingInputTRIA.premium']
#xp_TRIAPerModeling = //td[text()='TRIA']//td[4]



#sub-totals
xp_PerilsSubTotalRated = //th[text()='Perils Sub Total']//following-sibling::td
xp_PerilRate = //b[@id()='perilRate']
xp_PerilsSubTotalAnnual = //input[@id()='perilSum']

#fees
xp_PolicyFeeRated = //th[text()='Policy Fee:']//following-sibling::td
xp_PolicyFeeAnnual = //input[@id()='policyFee']
xp_InspectionFeeRated = //th[text()='Inspection Fee:']//following-sibling::td
xp_InspectBuildings = //span[@id()='requestInspectionTotal']
xp_InspectBuildingsCheckbox = //span[@class()='requestInspectionTotal'][%s]
xp_InspectionFeeAnnual = //input[@id()='inspectionFee']

xp_VIEContribution = //th[text()='Vie Contribution:']//following-sibling::td
xp_VIEPercentage = //a[@href()='#vieContribution]
xp_ReciprocalOverridesWind = //input[@id()='reciprocalOverridesWind']
xp_ReciprocalOverridesAOP = //input[@id()='reciprocalOverridesAllRisk']
xp_ReciprocalOverridesEQ = //input[@id()='reciprocalOverridesEQ']
xp_ReciprocalOverridesSinkhole = //input[@id()='reciprocalOverridesSinkhole']
xp_ReciprocalOverridesEQB = //input[@id()='reciprocalOverridesEQB']

#xp_ICATTotal1 = //
xp_ICATTotal = //th[@id()='icatTotal']
xp_BrokerFeesRecalc = //radio[@text()='Recalc']
xp_BrokerFeesDelete = //radio[@text()='Delete']
xp_BrokerFeesLeave = //radio[@text()='Leave']
#xp_GrandTotal1 = //th[text()='Grand Total']//following-sibling::td
xp_GrandTotal = //th[text()='Grand Total']//following-sibling::td[1]

#buttons
xp_Cancel = //button[@name()='_eventId_cancel']
xp_VerifyPricing = //button[@name()='_eventId_overridePremium']
xp_SavePricing = //button[@name()='_eventId_saveOverride']
xp_OverrideAndComplete = //button[@name()='_eventId_overrideAndComplete']

#bottom links
xp_BuildingAddressClearance = //a[@text()='Building Address Clearance']
xp_RiskView = //a[@text()='Risk View']
xp_GoogleMaps = //a[@text()='Google Maps']






