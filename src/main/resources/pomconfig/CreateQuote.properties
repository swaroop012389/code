xp_Quotename = //input[@name ='quoteName']

#Deductibles/Coverages
xp_CoverageByPolicy = //input[@id ='selectionLevelPolicy']
xp_CoverageByLocation = //input[@id ='selectionLevelLocation']

xp_NamedStorm = //input[@value ='NS']
xp_NamedHurricane = //input[@value ='NH']

#deductible applicability and occurrence are the same for NS and NH
xp_DeductibleOccurrenceArrow = //span[contains(@id,'DedFreqNSSelectBoxItArrowContainer')]
xp_DeductibleOccurrenceOption = //ul[contains(@id,'DedFreqNSSelectBoxItOptions')]//a[text()='%s']
xp_DeductibleApplicabilityArrow=//span[contains(@id,('DedAppLevNSSelectBoxItArrowContainer'))]
xp_DeductibleApplicabilityOption =//ul[contains(@id,'DedAppLevNSSelectBoxItOptions')]//a[text()='%s']

xp_NamedStormArrow = //span[contains(@id,'NSSelectBoxItArrowContainer')]
#xp_NamedStormOption = //ul[@id='valuespol0_RESNAAOPDedBldg_NSSelectBoxItOptions']//li[a[normalize-space()='%s']]
xp_NamedStormOption = //label[contains(text(),'Named Storm')]//following-sibling::span//a[contains(text(),'%s')]
xp_NamedStormOption1 = //ul[@id='valuespol0_RESNAAOPDedBldg_NSSelectBoxItOptions']//li[a[normalize-space()='%s']]
xp_NamedStormAppliesByArrow=//span[contains(@id,('DedAppLevNSSelectBoxItArrowContainer'))]
xp_NamedStrormAppliesByOption =//label[contains(text(),'Named Storm')]//following::ul[contains(@id,'DedAppLevNSSelectBoxItOptions')]//a[text()='%s']
xp_NamedStormDeductibleApplicabilityArrow = //label[contains(text(),'Named Storm')]//following::span[contains(@id,'DedFreqNSSelectBoxItArrowContainer')]
xp_NamedStormDeductibleApplicabilityOption = //label[contains(text(),'Named Storm')]//following::ul[contains(@id,'DedFreqNSSelectBoxItOptions')]//a[text()='%s']
xp_NamedStormData = //span[contains(@id,'NSSelectBoxItText')]

xp_NamedHurricaneArrow = //span[contains(@id,'NHSelectBoxItArrowContainer')]
xp_NamedHurricaneArrow1 = (//span[contains(@id,'NHSelectBoxItArrowContainer')])[%s]
xp_NamedHurricaneOption = //a[contains(text(),'%s')]
xp_NamedHurricaneAppliesByArrow = //span[contains(@id,'DedAppLevNSSelectBoxItArrowContainer')]
xp_NamedHurricaneAppliesByOption = //a[contains(text(),'%s')]
xp_NamedHurricaneDeductibleApplicabilityArrow = //span[contains(@id,'DedFreqNSSelectBoxItArrowContainer')]
xp_NamedHurricaneDeductibleApplicabilityOption = //a[contains(text(),'%s')]
xp_NamedHurricanceData =//span[contains(@id,'NHSelectBoxItText')]
xp_NamedHurricaneValue = //span[@id ='valuespol0_ResLoc_NHSelectBoxItText']

xp_NamedStormAndHurricanceAppliesByData = //span[contains(@id,'DedAppLevNSSelectBoxItText')]
xp_NamedStormAndHurricanceApplicabilityData = //span[contains(@id,'DedFreqNSSelectBoxItText')]

xp_AOWHArrow = //span[contains(@id,'AOWSelectBoxItArrowContainer')]
#for NAHO, there's no "&" in the label, it's All Other Wind And Hail.  looks like that's accounted for in xp_AOWHOptionNAHO
#xp_AOWHOption= //label[contains(text(),'All Other Wind And Hail')]//following::ul[contains(@id,'AOWSelectBoxItOptions')]//li//a[contains(text(),'%s')]
xp_AOWHOption= //label[contains(text(),'All Other Wind & Hail')]//following::ul[contains(@id,'AOWSelectBoxItOptions')]//a[contains(text(),'%s')]
xp_AOWHOptionNAHO =//label[contains(text(),'Hail')]//following-sibling::span//a[text()='%s']
#xp_AOWHAppliesByArrow= //span[contains(@id,'DedAppLevAOWHSelectBoxItArrowContainer')]
xp_AOWHAppliesByArrow= //span[@id = 'valuespol0_DedAppLevAOWHSelectBoxItArrowContainer']
xp_AOWHAppliesByOption=  //label[contains(text(),'Hail')]//following-sibling::span//a[text()='%s']
xp_AOWHApplicabilityData = //span[contains(@id,'DedAppLevAOWHSelectBoxItContainer')]//following-sibling::span[contains(text(),'per')]
xp_AOWHDeductibleData = //span[contains(@id,'AOWSelectBoxItText')]
xp_AOWHSelectListNAHO = //select[contains(@id, 'RESNAAOPDedBldg_AOW')]

xp_AOCLArrow = //span[contains(@id,'AOCL_AOLCSelectBoxItArrowContainer')]
xp_AOCLOption = //label[contains(text(),'Cause of Loss')]//following::ul[contains(@id,'AOLCSelectBoxItOptions')]//a[contains(text(),'%s')]
xp_AOCLDeductibleData =//span[contains(@id,'AOCL_AOLCSelectBoxItText')]
xp_AOCLDeductibleApplicabilityData = //span[contains(@id,'AOCL_AOLCSelectBoxItContainer')]//following-sibling::span[contains(text(),'per')]

xp_EarthquakeArrow = //span[contains(@id,'_EQSelectBoxItArrowContainer')]
xp_EarthquakeOption = //label[contains(text(),'Earthquake')]//following-sibling::span//a[text()='%s']
xp_EarthquakeData = //span[contains(@id,'EQSelectBoxItText')]
xp_EarthquakeAppliesByArrow = //span[contains(@id,'DedAppLevEQSelectBoxItArrowContainer')]
xp_EarthquakeAppliesByOption = //label[contains(text(),'Earthquake')]//following::ul[contains(@id,'DedAppLevEQSelectBoxItOptions')]//a[contains(text(),'%s')]
xp_EarthquakeApplicabilityData = //label[contains(text(),'Earthquake')]//following::span[contains(text(),'per')]
xp_EarthquakeOptionEQHO = //label[contains(text(),'EQ')]//following-sibling::span//a[contains(text(),'%s')]

#policy-level, can use full id for commercial
xp_FloodByPolicyArrow = //i[@id = 'valuespol0_Flood_SelectBoxItArrow']
xp_FloodByPolicyOption = //ul[@id = 'valuespol0_Flood_SelectBoxItOptions']//a[contains(text(),'%s')]
xp_FloodDeductibleArrow = //span[contains(@id,'FloodSelectBoxItArrowContainer')]
xp_FloodDeductibleOption = //label[contains(text(),'Flood')]//following-sibling::span//a[contains(text(),'%s')]
xp_FloodData = //span[contains(@id,'ResLoc_FloodSelectBoxItText')]

#Optional Coverage
xp_MoldArrow = //span[contains(@id,'Mold_ALLSelectBoxItArrow')]
xp_MoldOption = //span[contains(@id,'Mold_ALLSelectBoxItContainer')]//following::ul[contains(@id,'Mold_ALLSelectBoxItOptions')]//a[contains(text(),'%s')]
xp_MoldData = //span[contains(@id ,'Mold_ALLSelectBoxItText')]
xp_MoldDataNAHO = //span[contains(@id ,'Mold_PropertySelectBoxIt')]
xp_MoldCleanup = //label[contains(text(),'Mold Clean Up')]//following-sibling::span//span[contains(text(),'$10,000')]
xp_Mold = //label[contains(text(),'Mold')]//following-sibling::span//span[contains(@id,'SelectBoxItText')]

xp_OrdinanceLawArrow  = //span[contains(@id,'ORD_ALLSelectBoxItArrow')]
xp_OrdinanceLawOption =//span[contains(@id,'ORD_ALLSelectBoxItContainer')]//following::ul[contains(@id,'ORD_ALLSelectBoxItOptions')]//a[contains(text(),'%s')]
xp_OrdinanceLawData = //span[contains(@id,'ORD_ALLSelectBoxItText')]
xp_OrdinanceLaw = //label[contains(text(),'Ordinance')]//following-sibling::span//span[contains(text(),'%s')]

xp_EquipmentBreakdownArrow = //span[contains(@id,'EQB_EQBSelectBoxItArrowContainer')]
#xp_EquipmentBreakdownOption = //ul[@id='valuespol0_EQB_EQBSelectBoxItOptions']//li//a[contains(text(),'%s')]
xp_EquipmentBreakdownOption = //ul[contains(@id,'valuespol0_EQB_E')]//li//a[contains(text(),'%s')]
xp_EquipmentBreakdownData=//span[contains(@id,'EQBSelectBoxItText')]

xp_CoverageExtensionPackageArrow = //span[contains(@id,'PackOptSelectBoxItArrowContainer')]
xp_CoverageExtensionPackageOption = //span[contains(@id,'PackOptSelectBoxItArrowContainer')]//following::ul[contains(@id,'PackOptSelectBoxItOptions')]//a[contains(text(),'%s')]
xp_CoverageExtensionPackageData= //span[contains(@id,'PackOptSelectBoxItText')]

xp_MLOIArrow  =//span[contains(@id,'valuespol0_MLOISelectBoxItArrowContainer')]
xp_MLOIOption = //span[contains(@id,'valuespol0_MLOISelectBoxItArrowContainer')]//following::ul[contains(@id,'valuespol0_MLOISelectBoxItOptions')]//a[contains(text(),'%s')]
xp_MLOIData = //span[contains(@id,'valuespol0_MLOISelectBoxItText')]

xp_WindDrivenArrow  =//span[contains(@id,'WDR_ALLSelectBoxItArrowContainer')]
xp_WindDrivenOption = //span[contains(@id,'WDR_ALLSelectBoxItArrowContainer')]//following::ul[contains(@id,'WDR_ALLSelectBoxItOptions')]//a[contains(text(),'%s')]
xp_WindDrivenData = //span[contains(@id,'WDR_ALLSelectBoxItText')]

xp_PersonalPropertyReplacementCostArrow = //span[contains(@id,'PersonalPropertyReplacementCost_SelectBoxItArrowContainer')]
xp_PersonalPropertyReplacementCostOption = //label[contains(text(),'Personal Property Replacement Cost')]//following-sibling::span//a[contains(text(),'%s')]
xp_PersonalPropertyReplacementCostData = //span[contains(@id,'PersonalPropertyReplacementCost_SelectBoxItText')]

xp_EnhancedReplacementCostArrow = //span[contains(@id,'EnhancedReplacementCost_ALLSelectBoxItArrowContainer')]
xp_EnhancedReplacementCostOption = //div[label[contains(text(),'Enhanced Replacement Cost')]]//a[text() ='%s']
xp_EnhancedReplacementCostData = //span[contains(@id,'EnhancedReplacementCost_SUBSelectBoxItText')]
xp_EnhancedReplacementCostDataHIHO = //label[contains(text(),'Enhanced')]//following-sibling::span//span[contains(@id,'SelectBoxItText')]

xp_GeneralLiabilityArrow = //span[contains(@id,'GL_ALLSelectBoxItArrowContainer')]
xp_GeneralLiabilityOption = //label[contains(text(),'General Liability')]//following-sibling::span//a[contains(text(),'%s')]
xp_GeneralLiabilityData= //span[contains(@id,'GL_OCCSelectBoxItText')]

xp_SinkholeArrow = //span[contains(@id,'sinkholeSelectBoxItArrowContainer')]
xp_SinkholeOption = //ul[@id='valuespol0_sinkholeSelectBoxItOptions']//li[a[contains(text(),'%s')]]
xp_SinkholeData=//span[contains(@id,'sinkholeSelectBoxItText')]

#policy-level, can use full id for commercial
xp_EQSLByPolicyArrow = //i[@id = 'valuespol0_EQSL_SelectBoxItArrow']
xp_EQSLByPolicyOption = //ul[@id = 'valuespol0_EQSL_SelectBoxItOptions']//a[contains(text(),'%s')]
xp_EarthquakeSprinklerLeakageArrow = //span[contains(@id,'EQSL_SelectBoxItContainer')]
xp_EarthquakeSprinklerLeakageOption = //span[contains(@id,'EQSL_SelectBoxItContainer')]//following::ul[contains(@id,'EQSL_SelectBoxItOptions')]//a[contains(text(),'%s')]
xp_EarthquakeSprinklerData= //span[contains(@id,'EQSL_SelectBoxItText')]

xp_ElectronicDataArrow = //span[contains(@id,'ElecData_ALLSelectBoxItArrow')]
xp_ElectronicDataOption = //span[contains(@id,'ElecData_ALLSelectBoxItContainer')]//following::ul[contains(@id,'ElecData_ALLSelectBoxItOptions')]//a[contains(text(),'%s')]
xp_ElectronicData =//span[contains(@id,'ElecData_ALLSelectBoxItText')]

xp_FineArtsArrow = //span[contains(@id,'FineArts_ALLSelectBoxItContainer')]
xp_FineArtsOption = //span[contains(@id,'FineArts_ALLSelectBoxItContainer')]//following::ul[contains(@id,'FineArts_ALLSelectBoxItOptions')]//a[contains(text(),'%s')]
xp_FineArtsData= //span[contains(@id,'FineArts_SUBSelectBoxItText')]

xp_ValuablePapersArrow = //span[contains(@id,'VP_ALLSelectBoxItContainer')]
xp_ValuablePapersOption = //span[contains(@id,'VP_ALLSelectBoxItContainer')]//following::ul[contains(@id,'VP_ALLSelectBoxItOptions')]//a[contains(text(),'%s')]
xp_ValuablePapersData= //span[contains(@id,'VP_SUBSelectBoxItText')]

xp_AccountReceivableArrow = //span[contains(@id,'AccRec_ALLSelectBoxItContainer')]
xp_AccountReceivableOption = //span[contains(@id,'AccRec_ALLSelectBoxItContainer')]//following::ul[contains(@id,'AccRec_ALLSelectBoxItOptions')]//a[contains(text(),'%s')]
xp_AccountsReceivableData= //span[contains(@id,'AccRec_SUBSelectBoxItText')]

xp_UtilityInterruptionArrow = //span[contains(@id,'UI_ALLSelectBoxItContainer')]
xp_UtilityInterruptionOption =  //span[contains(@id,'UI_ALLSelectBoxItContainer')]//following::ul[contains(@id,'UI_ALLSelectBoxItOptions')]//a[contains(text(),'%s')] 
xp_UtilityInterruptionData= //span[contains(@id,'UI_ALLSelectBoxItContainer')]

xp_FloodCoverageArrow=//span[contains(@id,'Flood_SelectBoxItArrowContainer')]
xp_FloodCoverageOption=//ul[contains(@id,'Flood_SelectBoxItOptions')]//a[text()='%s']
xp_FloodCoverageData= //span[contains(@id,'Flood_SelectBoxItText')]

#tria is always by policy
xp_TRIAByPolicyArrow = //i[@id = 'valuespol0_Terrorism_SelectBoxItArrow']
xp_TRIAByPolicyOption = //ul[@id = 'valuespol0_Terrorism_SelectBoxItOptions']//a[contains(text(),'%s')]
xp_TerrorismArrow=//i[@id = 'valuespol0_Terrorism_SelectBoxItArrow']
xp_TerrorismOption= //ul[@id = 'valuespol0_Terrorism_SelectBoxItOptions']//a[contains(text(),'%s')]
xp_TerrorismData= //span[contains(@id,'Terrorism_SelectBoxItText')]

xp_IncreasedPeriodofRestorationArrow=//span[contains(@id,'IPR_SelectBoxItArrowContainer')]
xp_IncreasedPeriodofRestorationOption=//span[contains(@id,'IPR_SelectBoxItContainer')]//following::ul[contains(@id,'IPR_SelectBoxItOptions')]//a[contains(text(),'%s')]
xp_IncreasedPeriodofRestorationData= //span[contains(@id,'IPR_SelectBoxItText')]

xp_ExtendedIndemnityArrow=//span[contains(@id,'EPISelectBoxItArrowContainer')]
xp_ExtendedIndemnityOption=//span[contains(@id,'EPISelectBoxItContainer')]//following::ul[contains(@id,'EPISelectBoxItOptions')]//a[contains(text(),'%s')]
xp_ExtendedIndemnityData= //span[contains(@id,'EPISelectBoxItText')]

xp_FoodSpoilageArrow=//span[contains(@id,'FS_ALLSelectBoxItArrowContainer')]
xp_FoodSpoilageOption=//span[contains(@id,'FS_ALLSelectBoxItContainer')]//following::ul[contains(@id,'FS_ALLSelectBoxItOptions')]//a[contains(text(),'%s')]
xp_FoodSpoilageData= //span[contains(@id,'FS_ALLSelectBoxItText')]

#Insured values
xp_Previous = //div[contains(text(),'Previous')]
xp_InternalQuote = //button[contains(text(),'Internal Quote')]
xp_GetAQuote = //div[contains(text(),'Get a Quote')]
xp_PageName = //h1
xp_Continue = //button[contains(text(),'Continue')]
xp_GoBack = //button[contains(text(),'Go Back')]
xp_Override = //button[contains(text(),'Override')]
xp_Loading = //div[@class ='loadmask']
xp_QuoteStep3 = //div[@class ='step3']
xp_LocationStep1 = //div[@class ='step1']

#xpaths for location wise Deductibles and coverages - location names are not static, need to find by id - i left the old identifiers, just in case
#by location deductible applicability
xp_LocationNamedHurricaneArrow = //*[contains(@id, 'valuesloc%s_NH_NHSelectBoxItArrow')]
#xp_LocationNamedHurricaneOption = //div[div[a[contains(text(),'Location %s:')]]]//label[contains(text(),'Named Hurricane')]//following-sibling::span//a[contains(text(), '%s')]
xp_LocationNamedHurricaneOption = //ul[contains(@id, 'valuesloc%s_NH_NHSelectBoxItOptions')]/../..//a[contains(text(), '%s')]
xp_LocationNamedHurricaneOption1 = //div[div[a[contains(text(),'Location %s:')]]]//label[contains(text(),'Named Hurricane')]//following-sibling::span//a[contains(text(), '%s')]

xp_LocationNamedStormArrow = //*[contains(@id, 'valuesloc%s_NS_NSSelectBoxItArrow')]
#xp_LocationNamedStormOption = //div[div[a[contains(text(),'Location %s:')]]]//label[contains(text(),'Named Storm')]//following-sibling::span//a[contains(text(), '%s')]
xp_LocationNamedStormOption = //ul[contains(@id, 'valuesloc%s_NS_NSSelectBoxItOptions')]/../..//a[starts-with(text(), '%s')]

xp_LocationAOWHArrow = //*[contains(@id, 'valuesloc%s_AOWH_AOWSelectBoxItArrow')]
#xp_LocationAOWHOption = //div[div[a[contains(text(),'Location %s:')]]]//label[contains(text(),'All Other Wind & Hail')]//following-sibling::span//a[contains(text(), '%s')]
xp_LocationAOWHOption = //ul[contains(@id, 'valuesloc%s_AOWH_AOWSelectBoxItOptions')]/../..//a[starts-with(text(), '%s')]

xp_LocationEarthquakeArrow = //div[div[a[contains(text(),'Location %s:')]]]//span[contains(@id,'EQSelectBoxItArrowContainer')]
#xp_LocationEarthquakeOption =//div[div[a[contains(text(),'Location %s:')]]]//following-sibling::span[contains(@id,'EQSelectBoxItArrowContainer')]/../..//a[contains(text(),'%s')]
xp_LocationEarthquakeOption = //ul[contains(@id, 'EQSelectBoxItOptions')][%s]/../..//a[starts-with(text(), '%s')]

#grr - the EQ deductible elements change base on if there's BPP coverage
xp_LocationBPPEarthquakeArrow = //span[contains(@id,'valuesloc%s_BPP_EQSelectBoxItArrowContainer')]
xp_LocationBPPEarthquakeOption = //ul[contains(@id, 'valuesloc%s_BPP_EQSelectBoxItOptions')]/../..//a[starts-with(text(), '%s')]
xp_LocationBldgEarthquakeArrow = //span[contains(@id,'valuesloc%s_Bldg_EQSelectBoxItArrowContainer')]
xp_LocationBldgEarthquakeOption = //ul[contains(@id, 'valuesloc%s_Bldg_EQSelectBoxItOptions')]/../..//a[starts-with(text(), '%s')]

#setting flood by location
xp_LocationFloodArrow = //span[contains(@id,'valuesloc%s_Flood_SelectBoxItArrowContainer')]
xp_LocationFloodOption = //ul[contains(@id,'valuesloc%s_Flood_SelectBoxItOptions')]/../..//a[contains(text(),'%s')]

#setting eqsl by location
xp_LocationEQSLArrow = //span[contains(@id,'valuesloc%s_EQSL_SelectBoxItArrowContainer')]
xp_LocationEQSLOption = //ul[contains(@id,'valuesloc%s_EQSL_SelectBoxItOptions')]/../..//a[contains(text(),'%s')]


#by building applicability
xp_BuildingNamedHurricaneArrow = //*[contains(@id, 'valuesloc%s_NHBuilding_NHSelectBoxItArrow')]
#xp_BuildingNamedHurricaneOption = //div[div[a[contains(text(),'Location %s:')]]]//label[contains(text(),'Named Hurricane')]//following-sibling::span//a[contains(text(), '%s')]
xp_BuildingNamedHurricaneOption = //ul[contains(@id, 'valuesloc%s_NHBuilding_NHSelectBoxItOptions')]/../..//a[starts-with(text(), '%s')]

xp_BuildingNamedStormArrow = //*[contains(@id, 'valuesloc%s_NSBuilding_NSSelectBoxItArrow')]
#xp_BuildingNamedStormOption = //div[div[a[contains(text(),'Location %s:')]]]//label[contains(text(),'Named Storm')]//following-sibling::span//a[contains(text(),'%s')]
xp_BuildingNamedStormOption = //ul[contains(@id, 'valuesloc%s_NSBuilding_NSSelectBoxItOptions')]/../..//a[starts-with(text(), '%s')]

xp_BuildingAOWHArrow = //*[contains(@id, 'valuesloc%s_AOWHBuilding_AOWSelectBoxItArrow')]
#xp_BuildingAOWHOption = //div[div[a[contains(text(),'Location %s:')]]]//label[contains(text(),'All other Wind & Hail')]//following-sibling::span//a[contains(text(), '%s')]
xp_BuildingAOWHOption = //ul[contains(@id, 'valuesloc%s_AOWHBuilding_AOWSelectBoxItOptions')]/../..//a[starts-with(text(), '%s')]

xp_BuildingEarthquakeArrow = //div[div[a[contains(text(),'Location %s:')]]]//span[contains(@id,'EQBuilding_EQSelectBoxItArrowContainer')]
#xp_BuildingEarthquakeOption =//div[div[a[contains(text(),'Location %s:')]]]//following-sibling::span[contains(@id,'EQBuilding_EQSelectBoxItArrowContainer')]/../..//a[contains(text(),'%s')]
xp_BuildingEarthquakeOption = //ul[contains(@id, 'valuesloc%s_EQBuilding_EQSelectBoxItOptions')]/../..//a[starts-with(text(), '%s')]

xp_LocationPersonalPropertyArrow =//div[div[a[contains(text(),'Location %s:')]]]//span[contains(@id,'PersonalPropertyReplacementCost_SelectBoxItArrowContainer')]
xp_LocationPersonalPropertyOption =//div[div[a[contains(text(),'Location %s:')]]]//following-sibling::span[contains(@id,'PersonalPropertyReplacementCost_SelectBoxItArrowContainer')]/../..//a[contains(text(),'%s')]

xp_LocationEnhancedreplacementCostArrow = //div[div[a[contains(text(),'Location %s:')]]]//span[contains(@id,'EnhancedReplacementCost_SUBSelectBoxItArrowContainer')]
xp_LocationEnhancedreplacementCostArrow1 = //span[@id="valuesloc%s_EnhancedReplacementCost_ALLSelectBoxItArrowContainer"]
xp_LocationEnhancedreplacementCostOption = //div[div[a[contains(text(),'Location %s:')]]]//following-sibling::span[contains(@id,'EnhancedReplacementCost_SUBSelectBoxItArrowContainer')]/../..//a[contains(text(),'%s')]
xp_LocationEnhancedreplacementCostOption1 = //ul[@id='valuesloc%s_EnhancedReplacementCost_ALLSelectBoxItOptions']//a[contains(text(),'%s')]

#not sure if these work anymore, leaving them just in case
xp_LocationOridnanceLawArrow = //*[contains(@id, 'valuesloc%s_ORD_ALLSelectBoxItArrowContainer')]
xp_LocationOridnanceLawOption = //div[div[a[contains(text(),'Location %s:')]]]//label[contains(text(),'Ordinance or Law')]//following-sibling::span//a[text()='%s']
#TF 09/27/24 - Lego release - these xpaths work while the above don't for me
xp_LocationOrdLaw = //span[contains(@id, 'valuesloc%s_ORD_ALLSelectBoxItContainer')]
xp_LocationOrdLawOption = //ul[contains(@id, 'valuesloc%s_ORD_ALLSelectBoxItOptions')]//li//a[starts-with(text(), '%s')]

xp_FloodCovA = //input[@id ='CovA_FLOOD']
xp_FloodCovC = //input[@id ='CovC_FLOOD']
xp_ReturnToFlood = //a[contains(text(),'Return to Flood')]
xp_FloodCoverageError = //div[contains(@id,'global_Error')]
xp_ContinueEndorsementChanges = //a[div[contains(text(),'Continue')]]
xp_CancelEndorsementChanges = //a[div[contains(text(),'Cancel')]]

xp_CovAEQ = //input[@id ='CovA_EQ']
xp_CovBEQ = //input[@id ='CovB_EQ']
xp_CovCEQ = //input[@id ='CovC_EQ']
xp_CovDEQ = //input[@id ='CovD_EQ']
xp_covAhelptext = //div[@class ='alert alert-warning']
xp_coverageOptionLink = //span[contains(text(),'Coverage Option')]
xp_coverageOptionHelptext = //div[table[@id ='packageDescriptionTable']]
xp_BuildingValue = //input[@id='coverageValuesloc%s_bldg%s_BLDG']        

xp_GlobalErr = //div[@id ='global_Error']

xp_InsuredCovA_NH =  //table[tbody[tr[td[div[span[text() ='Location %s - Dwelling %s-%s']]]]]]//following-sibling::table[1]//tbody//tr//td//input[@id ='CovA_NH']
xp_InsuredCovB_NH = //table[tbody[tr[td[div[span[text() ='Location %s - Dwelling %s-%s']]]]]]//following-sibling::table[1]//tbody//tr//td//input[@id ='CovB_NH']
xp_InsuredCovC_NH = //table[tbody[tr[td[div[span[text() ='Location %s - Dwelling %s-%s']]]]]]//following-sibling::table[1]//tbody//tr//td//input[@id ='CovC_NH']
xp_InsuredCovD_NH = //table[tbody[tr[td[div[span[text() ='Location %s - Dwelling %s-%s']]]]]]//following-sibling::table[1]//tbody//tr//td//input[@id ='CovD_NH']

xp_InternalQuoteChkBox = //input[contains(@id,'quoteInternalOnlyTrigger')]
xp_AddFloodDetailsLink = //a[contains(text(),'Add Flood Details')]
xp_CovDNHWarning = //li[contains(text(),'Coverage D NH on Location')]
xp_CovDEQWarning = //li[contains(text(),'Coverage D EQ on Location')]
xp_UWReferralWarning = //li[contains(text(),'UW Referral')]

xp_CovDFlood = //input[@id ='CovD_FLOOD']
xp_BackToAccountOverview = //a[contains(text(),'Back')]
xp_CovAFloodMin20000_WarningMessage = //div[contains(text(),'CovA Flood Coverage minimum is $20,000')]
xp_CloseButton = //button[contains(text(),'Close')]

xp_QuoteLink = //div[contains(text(),'Bound Quote No.:')]//following-sibling::div//a[1]
xp_QuoteDetails = //b[contains(text(),'Residential Named Peril Catastrophe Quote Applicat')]
xp_MinimumCost = //li[contains(text(),'Coverage A value will be increased')]

xp_CovAFloodLimitgretaer = //li[text() ='Flood Coverage A limit cannot be greater than Hurricane Coverage A limit.']
xp_CovCFloodLimitgretaer = //li[text() ='Flood Coverage C limit cannot be greater than Hurricane Coverage C limit. ']
xp_CovAandCLimitLess = //li[contains(text(),'Flood Coverage A + C limits cannot be less')]
xp_CovAandCLessLimit = //div[contains(text(),'Flood Coverage A + C limits cannot be less than $28,000.')]
xp_CombinedLimitMin = //li[contains(text(),'Combined limit minimum')]

xp_LocationDwelling = //span[contains(text(),'Location "%s"- Dwelling "%s"-"%s"')]
xp_NoLossLetterMsg = //ul//li[contains(text(),'This account is under a No Loss Letter Period.')]
xp_NoLossLetterMsg1 = //ul//li[contains(text(),'This account is under a moratorium.')]

xp_ReferralMsg=//li
xp_CoverageWarning=//li[contains(text(),'Coverage')]
xp_ModifyFormsButton=//div[contains(text(),'Modify Forms')]
xp_ContinueToFormsButton=//div[contains(text(),'Continue To Forms')]
xp_CoverageExtensionPackageLink = //span[text()='Coverage Extension Package']

#Package values
xp_PackageValues = //table[@id='packageDescriptionTable']/tbody/tr/td[contains(text(),'%s')]//following::td[%s]

#xpaths for Coverage Extension Package B
xp_PackageBAccountsReceivable = //td[text()='Accounts Receivable']
xp_PackageBAccountsReceivablevalue = //td[text()='Accounts Receivable']//following::td[3]
xp_PackageBCustomersProperty = //td[contains(text(),'Property in Your Covered Building')]
xp_PackageBCustomersPropertyvalue = //td[contains(text(),'Property in Your Covered Building')]//following::td[3]
xp_PackageBFineArts = //td[text()='Fine Arts']
xp_PackageBFineArtsvalue = //td[text()='Fine Arts']//following::td[3]
xp_PackageBFireExtinguisher = //td[text()='Fire Extinguisher Recharge']
xp_PackageBFireExtinguishervalue = //td[text()='Fire Extinguisher Recharge']//following::td[3]
xp_PackageBLockReplacement = //td[text()='Lock Replacement']
xp_PackageBLockReplacementvalue = //td[text()='Lock Replacement']//following::td[3]
xp_PackageBRobbery = //td[text()='Robbery of a Custodian or Safe Burglary Coverage']
xp_PackageBRobberyvalue = //td[text()='Robbery of a Custodian or Safe Burglary Coverage']//following::td[3]
xp_PackageBSewerDrain = //td[text()='Sewer, Drain, and Sump Back-up or Overflow']
xp_PackageBSewerDrainvalue =//td[text()='Sewer, Drain, and Sump Back-up or Overflow']//following::td[3]
xp_PackageBSpoilage = //td[text()='Spoilage']
xp_PackageBSpoilagevalue = //td[text()='Spoilage']//following::td[3]
xp_PackageBTheft = //td[text()='Theft, Disappearance, or Destruction of Money and Securities']
xp_PackageBTheftvalue = //td[text()='Theft, Disappearance, or Destruction of Money and Securities']//following::td[3]
xp_PackageBDirectDamage = //td[text()='Utility Services - Direct Damage']
xp_PackageBDirectDamagevalue =  //td[text()='Utility Services - Direct Damage']//following::td[3]
xp_PackageBTimeElement = //td[text()='Utility Services - Time Element']
xp_PackageBTimeElementvalue = //td[text()='Utility Services - Time Element']//following::td[3]
xp_PackageBElectronic = //td[text()='Electronic Data']
xp_PackageBElectronicvalue  = //td[text()='Electronic Data']//following::td[3]
xp_PackageBExtendedPeriod = //td[text()='Extended Period of Indemnity']
xp_PackageBExtendedPeriodvalue = //td[text()='Extended Period of Indemnity']//following::td[3]
xp_PackageBFireDepartment = //td[text()='Fire Department Service Charge']
xp_PackageBFireDepartmentvalue = //td[text()='Fire Department Service Charge']//following::td[3]
xp_PackageBNewlyAcquiredBpp = //td[text()='Newly Acquired Business Personal Property']
xp_PackageBNewlyAcquiredBppvalue = //td[text()='Newly Acquired Business Personal Property']//following::td[3]
xp_PackageBConstructedProperty = //td[text()='Newly Acquired or Constructed Property']
xp_PackageBConstructedPropertyvalue =  //td[text()='Newly Acquired or Constructed Property']//following::td[3]
xp_PackageBOutdoorProperty =//td[text()='Outdoor Property']
xp_PackageBOutdoorPropertyvalue = //td[text()='Outdoor Property']//following::td[3]
xp_PackageBPerimeterExtensionBpp = //td[text()='Perimeter Extension: Covered Property - BPP']
xp_PackageBPerimeterExtensionBppvalue = //td[text()='Perimeter Extension: Covered Property - BPP']//following::td[3]
xp_PackageBPerimeterExtensionBuilding = //td[text()='Perimeter Extension: Covered Property - Building']
xp_PackageBPerimeterExtensionBuildingvalue = //td[text()='Perimeter Extension: Covered Property - Building']//following::td[3]
xp_PackageBPersonalEffects = //td[text()='Personal Effects and Property of Others']
xp_PackageBPersonalEffectsvalue = //td[text()='Personal Effects and Property of Others']//following::td[3]
xp_PackageBPropertyinTransit = //td[text()='Property in Transit']
xp_PackageBPropertyinTransitvalue =  //td[text()='Property in Transit']//following::td[3]
xp_PackageBPropertyOffPremises = //td[text()='Property off Premises']
xp_PackageBPropertyOffPremisesvalue = //td[text()='Property off Premises']//following::td[3]
xp_PackageBTenantGlass = //td[text()='Tenant Glass']
xp_PackageBTenantGlassvalue = //td[text()='Tenant Glass']//following::td[3]
xp_PackageBValuablePapersAndRecords = //td[text()='Valuable Papers and Records']
xp_PackageBValuablePapersAndRecordsvalue = //td[text()='Valuable Papers and Records']//following::td[3]

xp_HO3 = //input[@value='HO3']
xp_HO5 = //input[@value='HO5']

#xp_NamedStormArrow_NAHO = //span[contains(@id,'NSSelectBoxItArrowContainer')]
xp_NamedStormArrow_NAHO = //span[contains(@id,'valuespol0_RESNAAOPDedBldg_NSSelectBoxItArrow')]

xp_AOPArrow = //span[contains(@id,'AOPSelectBoxItArrowContainer')]
xp_AOPOption =  //label[contains(text(),'AOP')]//following-sibling::span//a[contains(text(),'%s')]
xp_AOPData = //span[contains(@id,'AOPSelectBoxItText')]

xp_AdditionalDwellingCoverageArrow = //span[contains(@id,'AddAmountInsDwelling_ALLSelectBoxItArrowContainer')]
#xp_AdditionalDwellingCoverageOption = //label[contains(text(),'Additional')]//following-sibling::span//a[text()='%s']
xp_AdditionalDwellingCoverageOption = //span[@id='valuespol0_AddAmountInsDwelling_ALLSelectBoxItContainer']//following-sibling::ul//a[text()='%s']
xp_AdditionalDwellingCoverageValue  = //span[contains(@id,'valuespol0_AddAmountInsDwelling_ALLSelectBoxItText')]

xp_BusinessPropertyArrow = //span[contains(@id,'IncLimitBusProp_ALLSelectBoxItArrowContainer')]
#xp_BusinessPropertyOption = //label[contains(text(),'Business')]//following-sibling::span//a[text()='%s']
xp_BusinessPropertyOption = //ul[@id='valuespol0_IncLimitBusProp_ALLSelectBoxItOptions']//li//a[contains(text(),'%s')]

xp_LimitedPoolArrow = //span[contains(@id,'LimitedPoolPatio_ALLSelectBoxItArrowContainer')]
#xp_LimitedPoolOption = //label[contains(text(),'Patio')]//following-sibling::span//a[text()='%s']
xp_LimitedPoolOption = //ul[@id='valuespol0_LimitedPoolPatio_ALLSelectBoxItOptions']//li//a[contains(text(),'%s')]

xp_LimitedWaterSumpArrow = //span[contains(@id,'LimitedWaterSump_ALLSelectBoxItArrowContainer')]
#xp_LimitedWaterSumpOption = //label[contains(text(),'Water')]//following-sibling::span//a[text()='%s']
xp_LimitedWaterSumpOption = //ul[@id='valuespol0_LimitedWaterSump_ALLSelectBoxItOptions']//li//a[contains(text(),'%s')]

xp_LossAssessmentArrow = //span//i[@id='valuespol0_LossAssess_ALLSelectBoxItArrow']
xp_LossAssessmentOption = //ul[@id='valuespol0_LossAssess_ALLSelectBoxItOptions']//li//a[text() ='%s'] 
#xp_LossAssessmentOption = //ul[@id='valuespol0_LossAssess_ALLSelectBoxItOptions']//li//a[contains(text(),'%s')]

xp_IdentityFraudArrow = //span[contains(@id,'IdentFraudExp_SelectBoxItArrowContainer')]
#xp_IdentityFraudOption = //label[contains(text(),'Fraud')]//following-sibling::span//a[text()='%s']
xp_IdentityFraudOption = //ul[@id='valuespol0_IdentFraudExp_SelectBoxItOptions']//li//a[contains(text(),'%s')]

xp_IncreaseSpecialLimitsArrow = //span[contains(@id,'IncSpecialLimits_SelectBoxItArrowContainer')]
#xp_IncreaseSpecialLimitsOption = //label[contains(text(),'Limits')]//following-sibling::span//a[text()='%s']
xp_IncreaseSpecialLimitsOption = //ul[@id='valuespol0_IncSpecialLimits_SelectBoxItOptions']//li//a[contains(text(),'%s')]

xp_PersonalInjuryArrow = //span[contains(@id,'PersInjury_LiabilitySelectBoxItArrowContainer')]
#xp_PersonalInjuryOption = //label[contains(text(),'Injury')]//following-sibling::span//a[text()='%s']
xp_PersonalInjuryOption = //ul[@id='valuespol0_PersInjury_LiabilitySelectBoxItOptions']//li//a[contains(text(),'%s')]

xp_SpecialPersonalPropertyArrow = //span[contains(@id,'SpecPersProp_SelectBoxItArrowContainer')]
#xp_SpecialPersonalPropertyOption = //label[contains(text(),'Personal Property')]//following-sibling::span//a[text()='%s']
xp_SpecialPersonalPropertyOption = //ul[@id='valuespol0_SpecPersProp_SelectBoxItOptions']//li//a[contains(text(),'%s')]

xp_ServiceLineArrow = //span[contains(@id,'ServiceLineSelectBoxItArrowContainer')]
#xp_ServiceLineOption = //ul[@id='valuespol0_ServiceLine_ServiceLineSelectBoxItOptions']//following-sibling::li//a[contains(text(),'%s')]
xp_ServiceLineOption = //ul[@id='valuespol0_ServiceLine_ServiceLineSelectBoxItOptions']//li//a[contains(text(),'%s')]

xp_EQBArrow_NAHO = //span[contains(@id,'EquipmentBreakdownSelectBoxItArrowContainer')]

xp_OrdinanceLawArrow_NAHO = //span[contains(@id,'ORD_ALLSelectBoxItArrowContainer')]

xp_MoldPropertyArrow = //span[contains(@id,'Mold_PropertySelectBoxItArrowContainer')]
#xp_MoldPropertyOption = //label[contains(text(),'Mold - Property')]//following-sibling::span//a[text()='%s']
xp_MoldPropertyOption = //ul[@id='valuespol0_Mold_PropertySelectBoxItOptions']//li//a[contains(text(),'%s')]
xp_MoldPropertyText = //span[contains(@id,'Mold_PropertySelectBoxItText')]

xp_Cancel = //button[contains(text(),'Cancel')]
xp_AdjustQuote = //button[contains(text(),'Adjust Quote')]

xp_CoverageADwelling = //input[@id='CovA_AOP']
xp_CoverageBOtherStructures = //input[@id='CovB_AOP']
xp_CoverageCPersonalProperty = //input[@id='CovC_AOP']
xp_CoverageDFairRental = //input[@id='CovD_AOP']
xp_CoverageEArrow = //span[@id='CovESelectBoxItArrowContainer']
xp_CoverageEOption = //ul[contains(@id,'CovESelectBoxItOptions')]//a[contains(text(),'%s')]
xp_CoverageFArrow = //span[@id='CovFSelectBoxItArrowContainer']
xp_CoverageFOption = //ul[contains(@id,'CovFSelectBoxItOptions')]//a[contains(text(),'%s')]

# Fetching values for all dropdowns in NAHO
xp_AdditionalDwellingCovDedValue = //span[contains(@id,'AddAmountInsDwelling_ALLSelectBoxItText')]
xp_PoolDedValue = //span[contains(@id,'LimitedPoolPatio_ALLSelectBoxItText')]
xp_WaterBackUpDedValue = //span[contains(@id,'LimitedWaterSump_ALLSelectBoxItText')]
xp_LossAssessmentDedValue = //div//a[contains(text(),'Loss Assessment')]//following::span[1]
xp_IdentityFraudDedValue = //span[contains(@id,'IdentFraudExp_SelectBoxItText')]
xp_PersonalInjuryDedValue = //span[contains(@id,'PersInjury_LiabilitySelectBoxItText')]
xp_LineCoverageDedValue = //span[contains(@id,'ServiceLineSelectBoxItText')]
xp_EQBreakdownDedValue = //span[contains(@id,'EquipmentBreakdownSelectBoxItText')]
xp_OrdinanceOrLawDedValue = //span[contains(@id,'ORD_ALLSelectBoxItText')]
xp_MoldPropertyDedValue = //span[contains(@id,'PropertySelectBoxItText')]
xp_MoldLiabilityDedValue = //span[contains(@id,'Mold_LiabilitySelectBoxItText')]
xp_CovEValue = //span[@id='CovESelectBoxItText']
xp_CovFValue = //span[@id='CovFSelectBoxItText']

xp_AOPDedValue = //span[contains(@id,'AOPSelectBoxItText')]
xp_NoofUnitsReferralMessage = //div[contains(text(),'number of units')]
xp_CovAMinimumReferralMessage = //li[contains(text(),'Coverage A limit of less than $300,000')]
xp_RoofAgeAlertMessage = //li[contains(text(),'The quoted building has a roof age outside of our guidelines.')]
xp_WarningMessages = //li[contains(text(),'%s')]
xp_EQLossAssessmentArrow = //span[contains(@id,'EQLossAssess_ALLSelectBoxItArrowContainer')]
xp_EQLossAssessmentOption = //label[contains(text(),'EQ Loss')]//following-sibling::span//a[text()='%s']
xp_EQLossAssessmentData = //span[contains(@id,'EQLossAssess_ALLSelectBoxItText')]
xp_AOPNSEQData = //div[contains(text(),'%s')]

xp_EarthQuakePriorLossWarning = //li[contains(text(),'This quote was referred due to a prior Earthquake ')]

xp_CoverageEWarningMessage = //p[contains(text(),'%s')]
xp_WarningMesssageForPrior1970 = //li[contains(text(), 'year or construction prior to 1970')]
xp_WarningMesssageForYearOfConstruction = //li[contains(text(), 'year of construction prior to 1970')]
xp_ErrorMessageForYearOfConstruction = //div[contains(text(), 'year of construction prior to 1970')]
xp_ContinueEndorsementBtn = //div[contains(text(), 'Continue')]

xp_RoofAgealertmessage = //div[contains(text(),'The account is ineligible due to the roof age')]

xp_LossAssessmentData = //span[contains(@id,'LossAssess_ALLSelectBoxItText')]
xp_DwellingCovData = //span[contains(@id,'AddAmountInsDwelling_ALLSelectBoxItText')]

xp_ErrorMessage = //li[contains(text(),'%s')]

xp_ErrorMessageWarningPage = //ul//li[contains(text(),'%s')]

xp_IncludeAPCCheckbox = //input[contains(@id,"inclApc%s")]
xp_BPPValue = //input[@id='coverageValuesloc%s_bldg%s_BPP']
xp_NIDisplay = //h1[@id="flowSubHeaderTitle"]
xp_Flood = //label[contains(text(),'flood')]
xp_FloodGrid =  //table[tbody[tr[td[div[span[contains(text(),'Location 1 - Dwelling 1-1')]]]]]]//following-sibling::table[1]//tr[3]//td[4]//div
xp_Floodgrid1 = //table[tbody[tr[td[div[span[contains(text(),'Location 1 - Dwelling 1-1')]]]]]]//following-sibling::table[1]//tr[2]//td[4]//input
xp_Floodgrid3 = //table[tbody[tr[td[div[span[contains(text(),'Location 1 - Dwelling 1-3')]]]]]]//following-sibling::table[1]//tr[4]//td[4]//input
xp_LocDwellingLink = //div[span[contains(text(),'Location 1 - Dwelling 1-3')]]


xp_GreenUpgradesArrow = //span[contains(@id,'GreenEndt_SelectBoxItArrowContainer')]
xp_GreenUpgradesData = //span[contains(@id,'GreenEndt_SelectBoxItText')]
xp_GreenUpgradesYesOption = //span[contains(@id,'GreenEndt_SelectBoxIt')]//following-sibling::ul//li[contains(@class,'first')]
xp_GreenUpgradesNoOption = //span[contains(@id,'GreenEndt_SelectBoxIt')]//following-sibling::ul//li[contains(@class,'last')]
xp_GreenUpgradesLabel = //a[contains(text(),'Green Upgrades')]

xp_MonthlyLimitOfIndemnityData = //span[contains(@id,'MLOISelectBoxItText')]
xp_WDRWarning =//li[contains(text(),'%s')]
xp_BIValue = //input[@id='coverageValuesloc%s_BI'] 
xp_EarthquakeAppliesByData = //span[contains(@id,'DedAppLevEQSelectBoxItText')]
xp_AOWHDeductibleAppliesByData = //span[contains(@id,'DedAppLevAOWHSelectBoxItText')]

xp_WarningMessage =//li
xp_WarningMessageforAdjustments = //li["%s"] 
xp_AlertErrore = //div[@class='alert alert-error']

xp_GlobalWarning = //div[contains(text(),'%s')]
xp_BuildingNumberLabel = //div[contains(text(),'%s')]
#this is a duplicate, not sure which one to use, so commenting out this one for now
#xp_OrdinanceLawData = //label[contains(text(),'Ordinance')]//following-sibling::span//span[contains(@id,'SelectBoxItText')]
xp_OridnanceLawSelection = //label[contains(text(),'Ordinance or Law')]//following-sibling::span//a[contains(text(),'%s')]
xp_Quote1Status = //a[contains(text(),'Quote 1')]//following::span[contains(text(),'Submitted')]
xp_Quote2StatusDelete = //a[contains(text(),'Quote 2')]//following::span[contains(text(),'Delete')]
xp_CovA_NHinputBox = //table[tbody[tr[td[div[span[contains(text(),'Location 1 - Dwelling 1-1')]]]]]]//following-sibling::table[1]//tr[2]//td[2]//input
xp_CovC_NHinputBox = //table[tbody[tr[td[div[span[contains(text(),'Location 1 - Dwelling 1-1')]]]]]]//following-sibling::table[1]//tr[4]//td[2]//input
xp_CovA_NH = //input[@id ='CovA_NH']

xp_EnhancedRCValue = //span[contains(@id,'EnhancedReplacementCost') and contains(@id,'SelectBoxItArrowContainer')]
xp_OrdinanceLawValue = //span[contains(@id,'ORD') and contains(@id,'SelectBoxItArrowContainer')]

xp_EarthQuakeValue = //span[@id ='valuespol0_ResLoc_EQSelectBoxItText']
xp_MinimunCostWarningMsg = //li[contains(text(),'%s')]

xp_LocationEarthquakeOption1 = //div[div[a[contains(text(),'Location %s:')]]]//following-sibling::span[contains(@id,'EQSelectBoxItArrowContainer')]/../..//a[contains(text(),'%s')]
xp_AOCL_Deductible_PercentageOrAmt_option = //a[contains(text(),'%s')]

xp_AOWH_NH_Deductible_PercentageOrAmt_Arrow = //span[contains(@id,'NHBuilding_AOWSelectBoxItArrowContainer')]
xp_AOWH_NH_Deductible_PercentageOrAmt_option = //a[contains(text(),'%s')]

xp_LocationOrdinanceLawOption1 = //ul[@id='valuesloc%s_ORD_ALLSelectBoxItOptions']//a[contains(text(),'%s')]
xp_InsuredCovC_NHName = //table[tbody[tr[td[div[span[text() ='%s - Dwelling %s-%s']]]]]]//following-sibling::table[1]//tbody//tr//td//input[@id ='CovC_NH']

