xp_QuoteNumber = //div[contains(text(),'Quote Number:')]//following-sibling::div
xp_QuotePremium = //div[contains(text(),'Quote Premium:')]//following-sibling::div

#Policy Details
xp_EffectiveDate = (//input[@id='effectiveDate'])
xp_ExpirationDate = //input[@id='expirationDate']
xp_Namedinsured = //div[label[contains(text(),'Named Insured')]]//input[contains(@id,'nsured')]
xp_ExtendedNamedInsured = //textarea[@name='extendedNamedInsured']
xp_EntityArrowAndData  = //span[@id='entitySelectBoxIt']
xp_EntityOption =  //label[contains(text(),'Entity')]//following-sibling::div//a[text()='%s']
xp_PrimaryFirstName = //input[contains(@id,'insuredNameAddressModel.primaryFirstName')]
xp_PrimaryLastName = //input[contains(@id,'insuredNameAddressModel.primaryLastName')]
xp_InsuredEmail = //input[contains(@id,'insuredNameAddressModel.email')]
xp_InsuredPhoneNoAreaCode = //input[contains(@id,'insuredNameAddressModel.phoneNumberAreaCode')]
xp_InsuredPhoneNoPrefix = //input[contains(@id,'insuredNameAddressModel.phoneNumberPrefix')]
xp_InsuredPhoneNoEnd = //input[contains(@id,'insuredNameAddressModel.phoneNumberEnd')]
xp_InsuredMailingAddressArrow = //span[@id='classSelectBoxItArrowContainer']
xp_InsuredmailingAddressSelection = //a[contains(text(),'%s')]
xp_InsuredCountry=//div[label[contains(text(),'Country:')]]//input
xp_CountrySelect = //select[@id = 'address.country']
xp_GrantorOrBenificiaryDifferentArrow = //i[@id='differentGrantorOrBeneficiarySelectBoxItArrow']
xp_GrantorOrBenificiaryDifferentOptions = //ul[@id='differentGrantorOrBeneficiarySelectBoxItOptions']//a[contains(text(),'%s')]
xp_GrantorOrBenificiaryNameTextbox = //input[@id='grantorOrBeneficiaryName']

xp_InsuredManualEntryLink = (//a[contains(text(),'Enter Address Manually')])[1]
xp_MailingAddress = (//input[contains(@name,'address.address')])[1]
xp_AddressLine2 = (//input[contains(@name,'address.line2')])[1]
xp_InternationalAddressLine3 = (//input[contains(@name,'address.line3')])[1]
xp_AddressLine1=//div[label[contains(text(),'Address Line 1:')]]//input
xp_AddressLine3 = (//input[contains(@id,'address.line3')])[1]
xp_InsuredCity = //label[contains(text(),'City')]//following-sibling::div//input[contains(@name,'address.city')]
xp_InsuredState = //div[label[span[contains(text(),'State:')]]]//input[contains(@id,'state')]
xp_Province = //div[label[span[contains(text(),'Province')]]]//following-sibling::div//input[contains(@id,'address.state')]
xp_PostalCode = //div[div[span[contains(text(),'Postal Code:')]]]//following-sibling::div//input[contains(@id,'zip')]
xp_InsuredZipcode = //div[label[span[contains(text(),'State:')]]]//input[contains(@id,'zip')]
xp_AutoComplete = (//a[contains(text(),'Use Autocomplete')])[1]

xp_FloodCoverageArrow = //span[@id='holdsFloodPolicySelectBoxIt']
xp_FloodCoverageOption = //ul[@id='holdsFloodPolicySelectBoxItOptions']//a[contains(text(),'%s')]

#Payment Information
xp_SinglePay = //input[@value='FullPay']
xp_MortgageePay = //input[@value='MortgageePay']
xp_4Pay = //input[@value='4Pay']
xp_3Pay = //input[@value='3Pay']
xp_10Pay = //input[@value='10Pay']

#Inspection Contact
xp_AssignInspContactToEntirePolicy = //input[@id='inspectionContactByPolicyRadio']
xp_AssignInspContactByLocation = //input[@id='inspectionContactByLocationRadio']
xp_InspectionContactName = (//input[contains(@name,'contactName')])[last()]
xp_InspectionPhoneNumberAreaCode = (//input[contains(@name,'phoneNumberAreaCode')])[last()]
xp_InspectionPhoneNumberPrefix = (//input[contains(@name,'phoneNumberPrefix')])[last()]
xp_InspectionPhoneNumberEnd = (//input[contains(@name,'phoneNumberEnd')])[last()]
xp_DeselectAll = (//div[text()='deselect all'])[last()]
xp_SelectAll = (//div[text()='select all'])[last()]
xp_AddInspection = //div[@id='add-insp-btn']
xp_LocationInspectionbox = //input[contains(@id,'assignedLocations%s')]

#Tria Coverage
xp_TriaArrow = //span[@id='includeTriaSelectBoxItArrowContainer']
xp_TriaSelection = //div[label[contains(text(),'TRIA Coverage')]]//a[contains(text(),'%s')]

#Additional Interests
xp_AITypeArrow = (//span[contains(@id,'typeSelectBoxItArrowContainer')])[last()]
xp_AITypeOption = //span[contains(@id,'addInts%s.typeSelectBoxIt')]//following-sibling::ul//li[a[contains(text(),'%s')]]
xp_AITypeOptionNAHO = (//span[contains(@id,'typeSelectBoxIt')]//following-sibling::ul//a[contains(text(),'%s')])[last()]
xp_AITypeData = (//span[contains(@id,'typeSelectBoxItText')])[last()]
xp_AILoanNumber = (//input[contains(@name,'loanNumber')])[last()]
xp_AIRelationShipArrow = (//span[contains(@id,'relationshipSelectBoxItArrowContainer')])[last()]
xp_AIRelationShipOption = (//span[contains(@id,'relationshipSelectBoxIt')]//following-sibling::ul//li[a[text()='%s']])[last()]
xp_AIRankArrow = ((//label[contains(text(),'Rank')]/..//following-sibling::div//span[contains(@id,'addInts%s.rankSelectBoxIt')])[4])
xp_AIRankOption = ((//label[contains(text(),'Rank')]/..//following-sibling::div//span[contains(@id,'addInts%s.rankSelectBoxIt')])[4])/..//following-sibling::ul//a[contains(text(),'%s')]
xp_AIRankArrowNAHO = (//span[contains(@id,'rankSelectBoxItArrowContainer')])[last()]
xp_AIRankOptionNAHO = (//span[contains(@id,'rankSelectBoxIt')]//following-sibling::ul//a[contains(text(),'%s')])[last()]
xp_AIRankData = (//span[contains(@id,'rankSelectBoxItText')])[last()]
xp_AIName = (//input[contains(@name,'name')])[last()]
xp_AICountry = (//input[contains(@id,'address.country')])[last()]
xp_AIEnterAddressManually =  (//a[contains(text(),'Enter Address Manually')])[last()]
xp_AIAddress = (//input[contains(@name,'address.address')])[2]
xp_AIAddressLine2 = (//input[contains(@name,'address.line2')])[last()]
xp_AILine1 = (//div[label[contains(text(),'Line 1:')]]//following-sibling::div//input)[last()]
xp_AICity = (//input[contains(@name,'address.city')])[last()]
xp_AIState = (//input[contains(@name,'address.state')])[last()]
xp_AIZipcode = //input[contains(@id,'addInts%s.address.zip')]
xp_AIZipcodePlus4 = (//input[contains(@name,'address.zip')])[3]
xp_UseAutoCompleteAI = ((//a[contains(text(),'Use Autocomplete')]))[last()]
xp_AddAIButton = //div[@id='add-additional-btn']
xp_AIByPolicy = (//label[contains(@class,'radio inline')]//input[contains(@value,'POLICY')])[last()]
xp_AIByLocation = (//label[contains(@class,'radio inline')]//input[contains(@value,'LOC_BUILDING')])[last()]
xp_AIBuildingSelection = (//i[contains(text(),'%s')]//..//input[contains(@id,'addInts%s')])[last()]
xp_AIBuildingSelectionData = (//input[@id = 'additionalInterest.addInts%s.assignments%s'])

#Contact Information
xp_Yourname = //input[@id='producerName']
xp_EmailAddress = //input[@id='producerEmail']
xp_SurplusLicenseNumber = //input[@id='surplusLines']
xp_SpecialInstructionsText = //textarea[@id='producerComment']
xp_Cancel = //button[contains(text(),'Cancel')]
xp_Submit = //button[contains(text(),'Submit')]


#Cancel Rewrite 
xp_CancelRewriteHeader = //span[contains(text(),'Cancel Rewrite')]
xp_OriginalInspectionFee = //div[label[contains(text(),'Original Inspection Fee')]]//div
xp_EarnedInspectionFee = //input[@id='earnedInspectionFee'] 
xp_OriginalPolicyFee = //div[label[contains(text(),'Original Policy Fee')]]//div
xp_EarnedPolicyFee = //input[@id='earnedPolicyFee']

#confirm bind 
xp_EditInformation = //button[contains(text(),'Edit Information')]
xp_RequestBind = //button[contains(@name,'continue')]

#USM Details
xp_Previous_PolicyNumber = //input[contains(@name,'previousPolicyNumber')]
xp_InternalComments = //textarea[contains(@id,'internalComments')]
xp_ExternalComments = //textarea[contains(@id,'externalComments')]

xp_DisplayQuote = (//button[contains(text(),'Display Quote')])[1]
xp_Quote_Details = //button[contains(text(),'Quote Details')]
xp_PreviewBinder = //button[contains(text(),'Preview Binder')]
xp_Approve = (//button[text()='Approve'])[1]
xp_Decline = //button[contains(text(),'Decline')]
xp_Pending_Modifications = //button[contains(text(),'Pending Modifications')]
xp_Handled_Outside_System = //button[contains(text(),'Handled Outside System')]
xp_Save = (//button[contains(text(),'Save')])[1]
xp_Cancel = (//button[contains(text(),'Cancel')])[1]

xp_ApproveBackDating = (//button[contains(text(),'Approve')])[last()]
xp_CancelBackDating = (//button[contains(text(),'Cancel')])[last()]
xp_OverrideEffectiveDate = //input[@name='overrideDate']
xp_PageName = //h1
xp_AdditionalMortgageeError = //span[@id='bindModel.errors']

xp_RewriteButton = //button[contains(text(),'Rewrite')] 
xp_BackdateRewrite = (//button[contains(text(),'Rewrite')])[last()]
xp_PreviouspolicyCancellationDate = //input[@id='oldPolicyCancellationDate']
xp_PreviousPolicyEffDate = //input[@id='oldPolicyEffectiveDate']
xp_SelfInspection = //input[@id='requestSelfInspection1']
xp_CarrierData = //span[contains(text(),'" + testData.get("Carrier") + "')]
xp_RequestBindQuoteName = //div[contains(text(),'Quote Name:')]//following-sibling::div

xp_MortgageeWarningMessage = //span[contains(text(),'To choose Mortgagee Pay, you must have a mortgagee on the policy')]
//xp_Carrier = //select[contains(@name,'selectedCarrier')]
xp_Carrier = //span[@id='usmDetails.selectedCarrierSelectBoxIt']
xp_CarrierArrow=//span[@id='usmDetails.selectedCarrierSelectBoxItArrowContainer']
xp_CarrierOption = (//ul[@id='usmDetails.selectedCarrierSelectBoxItOptions']//a[starts-with(text(),"ICM")])[%s]
xp_CarrierOptionByText = //ul[@id='usmDetails.selectedCarrierSelectBoxItOptions']//a[contains(text(),'%s')]
xp_FirstCarrierOption = (//ul[@id='usmDetails.selectedCarrierSelectBoxItOptions']//a[starts-with(text(),"ICM")])
xp_InfoSymbol = //ul[contains(@id,'concierge-widgets')]/li/button 
xp_MoratoriumWarningMessage = //b[contains(text(),'This account is in a moratorium')]
xp_MoratoriumReferralMessage = //ul//li[contains(text(),'This new business account is in a moratorium')]

#Name change
xp_NameChange_Yes = //button[text() ='Yes']
xp_NameChange_No = //button[text() ='No']

xp_EffectiveDateErrorMsg = (//span[contains(@id,'effectiveDate.errors')])[2]
xp_MailingAddressMandatoryMsg = //div[contains(@class,'error')]//label[contains(text(),'Mailing Address')]
xp_InspectionContactNameMandatoryMsg  = //div[contains(@class,'error')]//label[text()='Name:']
xp_InspectionContactPhoneMandatoryMsg = //div[contains(@class,'error')]//label[contains(text(),'Phone')]
xp_ContactNameMandatoryMsg = //div[contains(@class,'error')]//label[contains(text(),'Your Name')]
xp_ContactEmailMandatoryMsg = //div[contains(@class,'error')]//label[contains(text(),'Your Email')]
xp_SurplusLicenseNumMandatorymsg = //div[contains(@class,'error')]//label[contains(text(),'Surplus Lines License')]

xp_ReturntoBindRequest = //button[contains(text(),'Bind Request')]
xp_WanttoContinue = //button[contains(text(),'want to continue')]

xp_CommissionRate = //div[contains(text(),'Commission Rate:')]//following::div[1]
xp_AICountrySelect = //select[@id='additionalInterest.addInts%s.address.country']
xp_FinancePay = //input[@value='PfcPay']
xp_SpecialInstructionsCheckbox = //input[@id='specialInstructionsCheckbox']
xp_DueDiligenceCheckbox = //input[@id='dueDiligenceCheckbox']
xp_ChooseFile = //label[contains(text(),'Due Diligence:')]//following::input[contains(@type,'file')]
xp_DueDiligenceText = //li[contains(text(),'%s')]
xp_PayplanErrorMessage = //span[@id='payPlan.errors']
xp_DueDiligenceMandatoryMsg = //div[contains(@class,'error')]//label[contains(text(),'Due Diligence')]
xp_CarrierWarningMsg = //div[@class='alert alert-warning']
xp_MoratoriumWarningMsg = //div[contains(text(),'moratorium is in effect')]

xp_GrandTotal = //h3[contains(text(),'Grand Total')]
xp_EffectiveDateErrorMsg1 = //p[contains(@class,'warningMessages')]
xp_OkButton = (//button[contains(text(),'Ok')])[1]
xp_ReciprocalAgreementMsg = //span[@id='reciprocal.errors']

#Premium of Pay Plans
xp_PayPlanPremium = (//div//label[@class='radio'])[%s]

#VIE Message
xp_VIEMessage = //div[@class = 'text-left span6']//ul//li[4]

xp_ConnecticutchooseFile = //label[contains(text(),'%s')]//following::input[@id='dueDiligenceFile']
xp_ConnectiCutFormError = //div[contains(@class,'error')]//label[contains(text(),'Connecticut Due Diligence/SL')]

#inspection contact error message
xp_InspectionContactNameErrorMsg = //div[@id='inspectionContact.contacts0.contactName.errors']
xp_InspectionContactPhoneErrorMsg = //span[@id='inspectionContact.contacts0.phoneNumber.errors']
xp_DiligenceText = //div[contains(text(),'requesting bind')]

xp_PrimaryTrusteeFirstName = //input[contains(@id,'primaryFirstName')]
xp_PrimaryTrusteeLastName = //input[contains(@id,'primaryLastName')]
xp_TrusteeDateofBirth = //input[@id='dateOfBirth']
xp_SecondaryTrusteeFirstName = //input[contains(@id,'secondaryFirstName')]
xp_SecondaryTrusteeLastName = //input[contains(@id,'secondaryLastName')]
xp_AIRelationshipOthersDescription = (//input[contains(@id,'otherDesc')])[last()]
xp_DiligenceCheckboxError = //span[@id='dueDiligenceChecked.errors']
xp_EffDateErrorMsg = //div[contains(text(),'%s')]
xp_CarrierArrowSelection = //span[contains(@id,'usmDetails.selectedCarrierSelectBoxIt')]//following-sibling::span[contains(text(),'%s')]
xp_DuediligenceClick =//span[@id='dueDiligenceFile.errors']//a[contains(text(),'here')]

xp_AIPostalCode = (//label[contains(text(),'Postal Code:')]//following-sibling::div//input[1])[last()]
xp_AIZipCodeQ3 = (//input[contains(@id,'addInts%s.address.zip')])[1]

xp_NLLWarningMsg = //div[contains(text(),'No Loss Letter Requirement is in effect')]
xp_NLLWarningMessage = //p[contains(text(),'%s')]
xp_NLLReferralMessage = //li[contains(text(),'This new business account is in a no loss letter')]

#here hyper link(Reciprocal)
xp_ClickHereLink = //span[@id='reciprocalAgreement.errors']//a
xp_ClickHereToApprove = //span[@id='reciprocal.errors']//a
xp_SingleNamedInsuredMsg = //span[@id='insuredNameAddressModel.name.errors']

xp_InsuredEmailMandatoryMsg = //div[contains(@class,'error')]//label[contains(text(),'Email')]
xp_InsurePhoneNoMandatoryMsg = //div[contains(@class,'error')]//label[contains(text(),'Phone')]
xp_MailingAddressMandatoryMsg = //div[contains(@class,'error')]//label[contains(text(),'Mailing Address')]
xp_DiligenceMandatoryMsg = //div[contains(@class,'error')]//input[contains(@id,'Diligence')]
xp_RelationshipMandatoryMsg = //div[contains(text(),'must have a relationship selected')]
xp_PrevPolCancelEffDateWarMsg = (//span[contains(text(),'Policy Cancellation date must be equal to new policy Effective Date')])[1]
xp_PreviousPolicyEffectiveDate = //input[@id='oldPolicyEffectiveDate']
xp_OriginalInsFee = //div//label[contains(text(),'Original Inspection Fee')]//following::div[1]
xp_NIDisplay = //h1[@id="flowSubHeaderTitle"]
xp_OkButton = //div/button[@class='btn btn-primary span3 submit-left strip-margin-left blockPath hidden']

xp_EffectiveDateData = //span[@id='bindWarningOverlayDate']
xp_NamedHurricaneValue = //li[contains(text(),'Named Hurricane')]
xp_Zipcode = (//label[contains(text(),'Zip')])[last()]//following-sibling::div//input[1]
xp_NameChangeNo = //button[@id='nameChangeWarningNo']
