xp_DaysBeforeNOC =//input[@id ='daysBeforeNOC']
xp_CancelReasonArrow = //span[@id ='reasonSelectBoxItArrowContainer']
xp_CancelReasonOption = //div[label[contains(text(),'Reason Code')]]//a[text() ="%s"]
xp_CancelReasonData =//span[contains(@id,'reasonSelectBoxItText')]
xp_LegalNoticeWording = //textarea[@id ='reasonComment']
xp_CancellationEffDate = //input[@name ='txnEffDate']
xp_CancelButton = //button[contains(text(),'Cancel')]
xp_NextButton = //button[contains(text(),'Next')]
xp_UnderwriterComment = //textarea[@id ='underwriterComment']
xp_PreviousButton = //button[contains(text(),'Previous')]
xp_CompleteTransaction = //button[contains(text(),'Complete')]
xp_Close = //button[contains(text(),'Close')]

#Out of Sequence transaction page
xp_Continuebutton = //button[contains(text(),'Continue')]
xp_Pagename = //h1

#Renewal Initiated but not bound and then Canceling Policy Msg
xp_CancellationSuccess = //a[contains(text(),'Cancellation Successful')]
xp_CancellationStatus = //div[contains(text(),'Status:')]//following-sibling::div
xp_CancelOption = //input[@id ='proRated' and @value  = 'ProRatedMinEarned']
xp_CancelOption1 = //input[@id ='proRated' and @value  = 'ProRated']

xp_ReasonErrorMessage = //span[contains(@id,'reason.errors')]
xp_ReasonWarningMessage =  //div[contains(@id,'global_Warning')]

xp_OkButton = //button[contains(text(),'Ok')]
xp_DeleteAndContinue = //button[contains(text(),'Delete and Continue')]
xp_sltfData=//td[contains(text(),'Taxes & Fees')]

xp_ProRatedRadioBtn = //input[@id ='proRated' and @value  = 'ProRated']
xp_ShortRatedRadioBtn = //input[@id ='proRated' and @value  = 'ShortRated']

xp_PremiumValue = //tr[@id='termPremium']//td[%s]
xp_InspectionFee =//tr[@id='inspectionFee']//td[%s]
xp_InspectionFeeNAHO = //td[contains(text(),'Inspection Fee')]//following-sibling::td[%s]
xp_PolicyFee = //tr[@id='policyFee']//td[%s]
xp_PolicyFeeNAHO=//td[contains(text(),'Policy Fee')]//following-sibling::td[%s]
xp_TaxesAndFees = //tr[@id='surplusLinesTaxesAndFees']//td[%s]
xp_PolicyTotal = //tr[@id='premiumTotals']//td[%s]

xp_InspectionFeeEarned = //input[@id='earnedInspectionFee']
xp_PolicyFeeEarned = //input[@id='earnedPolicyFee']

#Prorata factors xpaths
xp_ProrataFactor = (//div[@id='cancelType']//following-sibling::div[10])[%s]

# Earned Premium and returned premium xpath
xp_EarnedPremiumValue = (//div[@id='cancelType']//following-sibling::div[3])[%s]
xp_ReturnedPremiumValue = (//div[@id='cancelType']//following-sibling::div[6])[%s]

xp_SurplusContributionVlaue = //tr[@id='surplusContribution']//td[%s]

#Cancellation successful x paths
xp_EarnedPremiumTotal = //div[contains(text(),'Earned Premium Total')]//following::div
xp_EarnedSurplusContribution = //div[contains(text(),'Earned VIE Surplus Contribution')]//following::div
xp_ReturnedPremiumTotal = //div[contains(text(),'Returned Premium')]//following::div
xp_ReturnedSurplusContribution = //div[contains(text(),'Returned VIE Surplus Contribution')]//following::div
xp_ProRatedMinEarned = //input[@id='proRated' and @value='ProRatedMinEarned']

xp_LapseContinueButton = //div//button[contains(text(),'Lapse, and Continue')]

#New earned fee override
xp_NewPremium=//td[contains(text(),'Premium')]//following-sibling::td[2]
xp_NewSLTF=//td[contains(text(),'Taxes & Fees')]//following-sibling::td[2]
xp_NewTotalPremium = //td[contains(text(),'Total')]//following-sibling::td[2]
xp_GlobalError = //div[@id='global_Error']

xp_ProRataRadioBtn = (//input[contains(@id,'proRated')])[2]
xp_SLTF=//td[contains(text(),'Taxes & Fees')]//following-sibling::td[%s]

#Reciprocal Surplus Contribution
xp_SurplusContributionVal = //td[contains(text(),'Surplus Contribution')]//following-sibling::td[%s]
xp_TotalPremiumTaxesFees = //td[contains(text(),'Total')]//following-sibling::td[%s]

# New earned fee override
xp_NewInspectionFee = //input[contains(@id,'InspectionFee')]
xp_NewPolicyFee = //input[contains(@id,'PolicyFee')]
xp_AdminTransactionCheckBox = //input[@id='administrativeTransaction1']

#Returned fee override
xp_ReturnedPremium=//td[contains(text(),'Premium')]//following-sibling::td[3]
xp_ReturnedInspectionFee=//td[contains(text(),'Inspection Fee')]//following-sibling::td[3]
xp_ReturnedPoicyFee=//td[contains(text(),'Policy Fee')]//following-sibling::td[3]
xp_ReturnedSLTF=//td[contains(text(),'Taxes & Fees')]//following-sibling::td[3]
xp_ReturnedTotalPremium = //td[contains(text(),'Total')]//following-sibling::td[3]

xp_WarningMessage = //span[contains(text(),'%s')]
xp_LegalNoticeWordingMandatoryMsg = //span[contains(text(),'Transaction Description')]
xp_NocMailDate = //label[contains(@id,'NOCDateLabel')]
xp_Premium=//td[contains(text(),'Premium')]//following-sibling::td[%s]
xp_Loading = //div[@class ='loadmask']
xp_FeesNegativeWarningMsg = //span[contains(@title,'Earned %s Fees cannot be negative')]
xp_NewInspectionFeeNAHO = //input[contains(@id,'InspectionFee')]
xp_NewPolicyFeeNAHO = //input[contains(@id,'PolicyFee')]
xp_PolicyEffectiveDate = //div[contains(text(),'Policy Effective Date:')]//following-sibling::div

xp_NewPremiumNAHO =//td[contains(text(),'Premium')]//following-sibling::td[%s]